@import 'tailwindcss';

@custom-variant dark (&:where(.dark, .dark *));

/* Mobile PWA Fullscreen Styles */
html {
  height: 100%;
  /* TODO */
  /* overflow: hidden; */
  /* Disable overscroll behavior */
  overscroll-behavior: none;
}

body {
  @apply bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900;
  height: 100vh;
  height: 100dvh; /* Dynamic viewport height for mobile */
  /* TODO */
  /* overflow: hidden; */
  /* Handle safe areas for notched devices */
  /* padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left); */
  /* Prevent zoom on double tap */
  touch-action: manipulation;
  /* Prevent text selection */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* Disable overscroll behavior */
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
}

#root {
  height: 100%;
  /* TODO */
  /* overflow: hidden; */
  /* Disable overscroll behavior */
  overscroll-behavior: none;
}

/* Hide elements with importance lower than current setting */
.importance-1.hidden-importance {
  display: none;
}

.importance-2.hidden-importance {
  display: none;
}

.importance-3.hidden-importance {
  display: none;
}

.importance-4.hidden-importance {
  display: none;
}

.importance-5.hidden-importance {
  display: none;
}

/* Hide number input arrows for Chrome, Safari, Edge, Opera */
.hide-number-arrows::-webkit-outer-spin-button,
.hide-number-arrows::-webkit-inner-spin-button {
  -webkit-appearance: none;
  appearance: none;
  margin: 0;
}

/* Hide number input arrows for Firefox */
.hide-number-arrows[type='number'] {
  -moz-appearance: textfield;
  appearance: textfield;
}

.PlayerSection,
.PlayerSectionContent {
  /* transition: transform 0.3s ease-in-out; */
  transition: none;
}

.PlayersSortingWrapper {
  display: grid;

  /* TODO: Add support for single player mode  */
  &[data-player-count='1'] {
    grid-template-areas: 'player-1';
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
  }

  &[data-player-count='2'] {
    grid-template-areas:
      'player-2'
      'player-1';
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;

    .tableMode & > div:nth-child(2) .PlayerSection {
      transform: rotate(180deg);
    }
  }

  &[data-player-count='3'] {
    grid-template-areas:
      'player-2 player-3'
      'player-1 player-3';
    grid-template-columns: 1fr 1fr;

    .tableMode & > div:nth-child(2) .PlayerSection {
      transform: rotate(180deg);
    }

    .tableMode & > div:nth-child(3) .PlayerSectionContent {
      transform: rotate(-90deg);
    }
  }

  &[data-player-count='4'] {
    grid-template-areas:
      'player-2 player-3'
      'player-1 player-4';
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;

    .tableMode & > div:nth-child(2) .PlayerSection,
    .tableMode & > div:nth-child(3) .PlayerSection {
      transform: rotate(180deg);
    }
  }

  &[data-player-count='5'] {
    grid-template-areas:
      'player-2 player-3 player-4'
      'player-1 player-5 player-4';
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;

    .tableMode & > div:nth-child(2) .PlayerSection,
    .tableMode & > div:nth-child(3) .PlayerSection {
      transform: rotate(180deg);
    }

    .tableMode & > div:nth-child(4) .PlayerSectionContent {
      transform: rotate(-90deg);
    }
  }

  &[data-player-count='6'] {
    grid-template-areas:
      'player-2 player-3 player-4'
      'player-1 player-6 player-5';
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;

    .tableMode & > div:nth-child(2) .PlayerSection,
    .tableMode & > div:nth-child(3) .PlayerSection,
    .tableMode & > div:nth-child(4) .PlayerSection {
      transform: rotate(180deg);
    }
  }
}

@layer components {
  .btn {
    @apply relative inline-flex cursor-pointer items-center justify-center gap-2 overflow-clip rounded-lg px-4 py-2 font-semibold transition-colors focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50;

    &.primary {
      @apply bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500 dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-400;
    }

    &.secondary {
      @apply bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-400 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 dark:focus:ring-gray-500;
    }

    &.danger {
      @apply bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-400;
    }

    &.default {
      @apply border border-gray-300 bg-white text-gray-900 hover:bg-gray-50 focus:ring-gray-500 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700 dark:focus:ring-gray-400;
    }

    &.small:not(.round) {
      @apply rounded-md px-2 py-1 text-sm;
    }

    &.round {
      @apply aspect-square rounded-full p-2;
      line-height: 0;

      &.small {
        @apply p-1;
      }
    }

    &.ghost {
      @apply border-none bg-transparent text-gray-700 shadow-none hover:bg-gray-100 focus:ring-gray-400 dark:text-gray-200 dark:hover:bg-gray-800 dark:focus:ring-gray-500;
    }

    > .animate-spin {
      @apply inline-block h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent align-middle;
    }
  }

  /* Unified Input Styles */
  .form-input {
    @apply w-full rounded-lg border border-gray-300 bg-white px-3 py-2 text-gray-900 placeholder-gray-500 transition-colors focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:placeholder-gray-400 dark:focus:border-blue-400 dark:focus:ring-blue-400;
  }

  .form-input-number {
    @apply w-full appearance-none rounded-lg border border-gray-300 bg-white px-3 py-2 text-gray-900 placeholder-gray-500 transition-colors focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:placeholder-gray-400 dark:focus:border-blue-400 dark:focus:ring-blue-400;
  }

  .form-input-range {
    @apply h-2 w-full cursor-pointer appearance-none rounded-lg bg-gray-200 transition-colors focus:ring-2 focus:ring-blue-500 focus:outline-none dark:bg-gray-700;
  }

  .form-textarea {
    @apply w-full rounded-lg border border-gray-300 bg-white px-3 py-2 text-gray-900 placeholder-gray-500 transition-colors focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:placeholder-gray-400 dark:focus:border-blue-400 dark:focus:ring-blue-400;
  }

  .form-checkbox {
    @apply h-4 w-4 rounded border-gray-300 bg-white text-blue-600 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-800 dark:focus:ring-blue-400;
  }
}

@keyframes useRippleAnimation {
  to {
    transform: scale(15);
    opacity: 0;
  }
}

.DragHandle {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: fit-content;
  height: fit-content;
  margin: auto;
}

.dragEnabled .hiddenWhenDragEnabled {
  display: none;
}

.BoardOverlay {
  pointer-events: none;

  > * {
    pointer-events: auto;
  }
}

/* Test IDs */
/* *[data-testid] {
  position: relative;

  &:hover {
    &::before {
      background-color: green;
    }
  }

  &::before {
    content: attr(data-testid);
    position: absolute;
    background-color: red;
    color: white;
    font-size: 7px;
    pointer-events: none;
    white-space: nowrap;
    padding: 2px 4px;
    border-radius: 4px;
  }
} */
